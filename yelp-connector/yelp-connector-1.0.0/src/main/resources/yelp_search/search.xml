<?xml version="1.0" encoding="utf-8"?>
<!--
 ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
<template xmlns="http://ws.apache.org/ns/synapse" name="search">
    <parameter name="term" description="Search term (e.g:food,restaurants).If term isn't included we search everything." />
    <parameter name="limit" description="Number of business results to return." />
    <parameter name="offset" description="Offset the list of returned business results by this amount." />
    <parameter name="sort" description="Sort mode: 0=Best matched (default), 1=Distance, 2=Highest Rated." />
    <parameter name="category_filter" description="Category to filter search results and can be a list of comma delimited categories.eg:'bars,french' will filter by Bars and French.('discgolf', not 'Disc Golf')" />
    <parameter name="radius_filter" description="Search radius in meters. If the value is too large, a AREA_TOO_LARGE error may be returned. The max value is 40000 meters (25 miles)." />
    <parameter name="deals_filter" description="Whether to exclusively search for businesses with deals" />
    <parameter name="country_code" description="Default country to use when parsing the location field. United States = US." />
    <parameter name="language" description="Reviews and snippets written in the specified language will be shown(default=en)." />
    <parameter name="location" description=" Specifies the combination of address,city,state or zip." />
    <parameter name="latitude" description="Latitude of current location." />
    <parameter name="longitude" description="Longitude of current location." />
    <parameter name="sw_latitude" description="Southwest latitude of bounding box." />
    <parameter name="sw_longitude" description="Southwest longitude of bounding box." />
    <parameter name="ne_latitude" description="Northeast latitude of bounding box." />
    <parameter name="ne_longitude" description="Northeast longitude of bounding box." />
    <parameter name="accuracy" description="Accuracy of latitude, longitude." />
    <parameter name="altitude" description="Altitude." />
    <parameter name="altitude_accuracy" description="Accuracy of altitude." />
    <sequence>
        <property name="yelp.term" expression="$func:term" />
        <property name="yelp.limit" expression="$func:limit" />
        <property name="yelp.offset" expression="$func:offset" />
        <property name="yelp.sort" expression="$func:sort" />
        <property name="yelp.category_filter" expression="$func:category_filter" />
        <property name="yelp.radius_filter" expression="$func:radius_filter" />
        <property name="yelp.deals_filter" expression="$func:deals_filter" />
        <property name="yelp.cc" expression="$func:country_code" />
        <property name="yelp.lang" expression="$func:language" />
        <property name="yelp.location" expression="$func:location" />
        <property name="yelp.latitude" expression="$func:latitude" />
        <property name="yelp.longitude" expression="$func:longitude" />
        <property name="yelp.sw_latitude" expression="$func:sw_latitude" />
        <property name="yelp.sw_longitude" expression="$func:sw_longitude" />
        <property name="yelp.ne_latitude" expression="$func:ne_latitude" />
        <property name="yelp.ne_longitude" expression="$func:ne_longitude" />
        <property name="yelp.accuracy" expression="$func:accuracy" />
        <property name="yelp.altitude" expression="$func:altitude" />
        <property name="yelp.altitude_accuracy" expression="$func:altitude_accuracy" />
        <property name="yelp.apiUri" expression="fn:concat(get-property('yelp.apiUri'),'search')"/>
        <property name="yelp.parameters" value=""/>
        <property name="yelp.unencoded" expression="get-property('yelp.location')"/>
        <class name="org.wso2.carbon.connector.Encoder" />
        <property name="yelp.location" expression="get-property('yelp.encoded')"/>
        <filter xpath="(get-property('yelp.sw_latitude')!='' and get-property('yelp.sw_longitude')!='' and get-property('yelp.ne_latitude')!='' and get-property('yelp.ne_longitude')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'bounds=', get-property('yelp.sw_latitude'),'%2C', get-property('yelp.sw_longitude'),'%7C', get-property('yelp.ne_latitude'),'%2C', get-property('yelp.ne_longitude'),'&amp;'
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.category_filter')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'category_filter=', get-property('yelp.category_filter'),'&amp;'
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.cc')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'cc=', get-property('yelp.cc'),'&amp;'
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.latitude')!='' and get-property('yelp.longitude')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'cll=', get-property('yelp.latitude'),'%2C',get-property('yelp.longitude'),'&amp;'
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.deals_filter')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'deals_filter=', get-property('yelp.deals_filter'),'&amp;'
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.lang')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'lang=', get-property('yelp.lang'),'&amp;'
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.limit')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'limit=', get-property('yelp.limit'),'&amp;'
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.latitude')!='' and get-property('yelp.longitude')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'll=', get-property('yelp.latitude'),'%2C',get-property('yelp.longitude')
                )"/>
                <filter xpath="(get-property('yelp.accuracy')!='')">
                    <then>
                    <property name="yelp.parameters" expression="fn:concat(
                    get-property('yelp.parameters'),'%2C',get-property('yelp.accuracy')
                    )"/>
                    </then>
                </filter>
                <filter xpath="(get-property('yelp.altitude')!='')">
                    <then>
                        <property name="yelp.parameters" expression="fn:concat(
                    get-property('yelp.parameters'),'%2C',get-property('yelp.altitude')
                    )"/>
                    </then>
                </filter>
                <filter xpath="(get-property('yelp.altitude_accuracy')!='')">
                    <then>
                        <property name="yelp.parameters" expression="fn:concat(
                    get-property('yelp.parameters'),'%2C',get-property('yelp.altitude_accuracy')
                    )"/>
                    </then>
                </filter>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),'&amp;'
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.location')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'location=', get-property('yelp.location'),'&amp;'
                )"/>
            </then>
        </filter>
        <property name="yelp.parameters" expression="fn:concat(
        get-property('yelp.parameters'),
        'oauth_consumer_key=', get-property('yelp.oauth.consumerKey'),
        '&amp;oauth_nonce=', get-property('yelp.oauth.nonce'),
        '&amp;oauth_signature_method=HMAC-SHA1',
        '&amp;oauth_timestamp=', get-property('yelp.oauth.timestamp'),
        '&amp;oauth_token=', get-property('yelp.oauth.accessToken'),
        '&amp;oauth_version=1.0'
        )"/>
        <filter xpath="(get-property('yelp.offset')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                '&amp;offset=', get-property('yelp.offset')
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.radius_filter')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                '&amp;radius_filter=', get-property('yelp.radius_filter')
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.sort')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                '&amp;sort=', get-property('yelp.sort')
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.term')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                '&amp;term=', get-property('yelp.term')
                )"/>
            </then>
        </filter>
        <class name="org.wso2.carbon.connector.GenerateSignature" />
        <property name="uri.var.signature" expression="get-property('yelp.oauth.signature')"/>
        <property name="uri.var.parameters" expression="get-property('yelp.parameters')"/>
        <property name="uri.var.apiUri" expression="get-property('yelp.apiUri')"/>
        <call>
            <endpoint>
                <http method="GET"
                      uri-template="{uri.var.apiUri}?{uri.var.parameters}&amp;oauth_signature={uri.var.signature}"/>
            </endpoint>
        </call>
    </sequence>
</template>